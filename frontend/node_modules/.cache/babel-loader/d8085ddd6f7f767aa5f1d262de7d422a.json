{"ast":null,"code":"var _jsxFileName = \"/Users/square1-praise/Downloads/Itunes-Web-Store-Search-App-main/frontend/src/components/Search.js\";\n// React and Axios are imported\nimport React, { Component } from 'react';\nimport axios from 'axios'; // React Bootstrap components are imported\n\nimport { Container, Form, Button, FormControl, DropdownButton, Dropdown } from 'react-bootstrap'; // Components imported\n\nimport DisplayItems from './DisplayItems';\nimport HelpModal from './HelpModal';\nimport FavouriteList from './FavouriteList'; // Search component for the frontend. It contains the search form,\n// request to the backend, and renders the display of the items,\n// favourite list, the state management, and logic.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCategorySelect = eventKey => {\n      this.setState({\n        category: eventKey\n      });\n    };\n\n    this.handleSearchChange = event => {\n      const searchItem = event.target.value;\n      const searchItemEdited = searchItem.split(' ').join('+');\n      this.setState({\n        searchItem,\n        searchItemEdited\n      });\n    };\n\n    this.showButton = () => {\n      if (this.state.category !== '') {\n        return /*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn btn-primary\",\n          onClick: this.handleSubmit,\n          children: [\"Search \", this.state.category.toUpperCase()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this);\n      }\n    };\n\n    this.handleSubmit = () => {\n      const {\n        searchItemEdited,\n        category\n      } = this.state;\n      axios.get(`/search/${searchItemEdited} / ${category}`).then(res => {\n        const searchData = res.data.results;\n        this.setState({\n          data: searchData\n        });\n\n        if (searchData.length === 0) {\n          alert('Unfortunately, no results were found!');\n        }\n      }).catch(error => {\n        console.log('Error:', error);\n      });\n    };\n\n    this.showNoResults = () => {\n      if (this.state.data.length === 0) {\n        return /*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"noResults\",\n          children: \" Itunes Web Store Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 20\n        }, this);\n      }\n    };\n\n    this.showNoFavourites = () => {\n      const {\n        searchItemEdited,\n        category,\n        data,\n        favourites\n      } = this.state;\n\n      if (favourites.length === 0 && searchItemEdited !== '' && category !== '' && data.length !== 0) {\n        return /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"lead text-center\",\n          children: \" Click the star on an item to view your favourites here! \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 20\n        }, this);\n      }\n    };\n\n    this.handleFavourites = (id, kind, artistName, trackName, artwork) => {\n      const {\n        favourites\n      } = this.state;\n\n      if (favourites.find(item => item.id === id)) {\n        alert('This item has already been added to your favourites list!');\n      } else {\n        const newFavourites = [...favourites, {\n          id,\n          kind,\n          artistName,\n          trackName,\n          artwork\n        }];\n        this.setState({\n          favourites: newFavourites\n        });\n        alert('Added to your favourites list. Scroll down to view!');\n      }\n    };\n\n    this.removeFavourite = id => {\n      const {\n        favourites\n      } = this.state;\n      const newFavourites = favourites.filter(item => item.id !== id);\n      this.setState({\n        favourites: newFavourites\n      });\n      alert('Removed from favourites list');\n    };\n\n    this.state = {\n      searchItem: '',\n      searchItemEdited: '',\n      category: '',\n      data: [],\n      favourites: []\n    };\n  } // Updates the state of the category when a user selects a category from the dropdown menu\n\n\n  render() {\n    const {\n      searchItemEdited,\n      category,\n      data,\n      favourites\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(Form, {\n          onChange: this.handleSearchChange,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            type: \"text\",\n            placeholder: \"Search term...\",\n            className: \"mr-sm-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DropdownButton, {\n          title: \"Categories\",\n          id: \"dropdown-basic-button\",\n          onSelect: this.handleCategorySelect,\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"movie\",\n            children: \"Movie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"podcast\",\n            children: \"Podcast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"music\",\n            children: \"Music\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"audiobook\",\n            children: \"Audiobook\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"shortFilm\",\n            children: \"Short Film\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"tvShow\",\n            children: \"TV Show\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"software\",\n            children: \"Software\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"ebook\",\n            children: \"Ebook\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"all\",\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"searchButton\",\n          children: this.showButton()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(HelpModal, {\n          className: \"modalButton\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        className: \"cardsContainer\",\n        children: data.length !== 0 ? data.map((item, index) => /*#__PURE__*/_jsxDEV(DisplayItems, {\n          item: item,\n          handleFavourites: this.handleFavourites\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"noResults\",\n          children: this.showNoResults()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        className: \"favouritesContainer\",\n        children: favourites.length !== 0 ? favourites.map((favourite, index) => /*#__PURE__*/_jsxDEV(FavouriteList, {\n          favourite: favourite,\n          removeFavourite: this.removeFavourite\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"noFavourites\",\n          children: this.showNoFavourites()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/square1-praise/Downloads/Itunes-Web-Store-Search-App-main/frontend/src/components/Search.js"],"names":["React","Component","axios","Container","Form","Button","FormControl","DropdownButton","Dropdown","DisplayItems","HelpModal","FavouriteList","Search","constructor","props","handleCategorySelect","eventKey","setState","category","handleSearchChange","event","searchItem","target","value","searchItemEdited","split","join","showButton","state","handleSubmit","toUpperCase","get","then","res","searchData","data","results","length","alert","catch","error","console","log","showNoResults","showNoFavourites","favourites","handleFavourites","id","kind","artistName","trackName","artwork","find","item","newFavourites","removeFavourite","filter","render","map","index","favourite"],"mappings":"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","sourcesContent":["// React and Axios are imported\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\n// React Bootstrap components are imported\nimport { Container, Form, Button, FormControl, DropdownButton, Dropdown } from 'react-bootstrap';\n\n// Components imported\nimport DisplayItems from './DisplayItems';\nimport HelpModal from './HelpModal';\nimport FavouriteList from './FavouriteList';\n\n// Search component for the frontend. It contains the search form,\n// request to the backend, and renders the display of the items,\n// favourite list, the state management, and logic.\nclass Search extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchItem: '',\n            searchItemEdited: '',\n            category: '',\n            data: [],\n            favourites: [],\n        };\n    }\n\n    // Updates the state of the category when a user selects a category from the dropdown menu\n    handleCategorySelect = (eventKey) => {\n        this.setState({ category: eventKey });\n    };\n\n    // Updates the state of the searchItem and searchItemEdited when a user types in the search bar\n    handleSearchChange = (event) => {\n        const searchItem = event.target.value;\n        const searchItemEdited = searchItem.split(' ').join('+');\n        this.setState({ searchItem, searchItemEdited });\n    };\n\n    // Renders the search button once a user selects a category\n    showButton = () => {\n        if (this.state.category !== '') {\n            return (\n                <Button className=\"btn btn-primary\" onClick={this.handleSubmit}>\n                    Search {this.state.category.toUpperCase()}\n                </Button>\n            );\n        }\n    };\n\n    // Sends user input to the server and updates the state of data.\n    // Shows an alert if no results were found.\n    handleSubmit = () => {\n        const { searchItemEdited, category } = this.state;\n        axios\n            .get(`/search/${ searchItemEdited } / ${ category }`)\n            .then((res) => {\n                const searchData = res.data.results;\n                this.setState({ data: searchData });\n                if (searchData.length === 0) {\n                    alert('Unfortunately, no results were found!');\n                }\n            })\n            .catch((error) => {\n                console.log('Error:', error);\n            });\n    };\n\n    // Renders the \"Itunes Web Store Search\" heading if no results are found\n    showNoResults = () => {\n        if (this.state.data.length === 0) {\n            return <h1 id=\"noResults\"> Itunes Web Store Search</h1>;\n        }\n    };\n\n    // Renders the \"Click the star on an item to view your favourites here!\" message if no favourites are found\n    showNoFavourites = () => {\n        const { searchItemEdited, category, data, favourites } = this.state;\n        if (favourites.length === 0 && searchItemEdited !== '' && category !== '' && data.length !== 0) {\n            return <h3 className=\"lead text-center\"> Click the star on an item to view your favourites here! </h3>;\n        }\n    };\n\n    // Adds item info to the favourites state\n    handleFavourites = (id, kind, artistName, trackName, artwork) => {\n        const { favourites } = this.state;\n        if (favourites.find((item) => item.id === id)) {\n            alert('This item has already been added to your favourites list!');\n        } else {\n            const newFavourites = [...favourites, { id, kind, artistName, trackName, artwork }];\n            this.setState({ favourites: newFavourites });\n            alert('Added to your favourites list. Scroll down to view!');\n        }\n    };\n\n    // Removes an item from favourites\n    removeFavourite = (id) => {\n        const { favourites } = this.state;\n        const newFavourites = favourites.filter((item) => item.id !== id);\n        this.setState({ favourites: newFavourites });\n        alert('Removed from favourites list');\n    };\n\n    render() {\n        const { searchItemEdited, category, data, favourites } = this.state;\n        return (\n            <Container>\n                {/* Navbar/Header */}\n                <div className=\"header\">\n                    {/* Search form */}\n                    <Form onChange={this.handleSearchChange}>\n                        <FormControl type=\"text\" placeholder=\"Search term...\" className=\"mr-sm-2\" />\n                    </Form>\n\n                    {/* Dropdown category menu */}\n                    <DropdownButton title=\"Categories\" id=\"dropdown-basic-button\" onSelect={this.handleCategorySelect}>\n                        {/* Update category state when a dropdown item is selected */}\n                        <Dropdown.Item eventKey=\"movie\">Movie</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"podcast\">Podcast</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"music\">Music</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"audiobook\">Audiobook</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"shortFilm\">Short Film</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"tvShow\">TV Show</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"software\">Software</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"ebook\">Ebook</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"all\">All</Dropdown.Item>\n                    </DropdownButton>\n\n                    {/* Show the button once a user selects a category */}\n                    <div className=\"searchButton\">{this.showButton()}</div>\n\n                    {/* Help modal with instructions */}\n                    <HelpModal className=\"modalButton\" />\n                </div>\n\n                {/* Display items */}\n                <Container className=\"cardsContainer\">\n                    {data.length !== 0 ? (\n                        data.map((item, index) => (\n                            <DisplayItems\n                                key={index}\n                                item={item}\n                                handleFavourites={this.handleFavourites}\n                            />\n                        ))\n                    ) : (\n                        <div className=\"noResults\">\n                            {/* Show no results message if no results are found or on initial load */}\n                            {this.showNoResults()}\n                        </div>\n                    )}\n                </Container>\n\n                {/* Favourites list */}\n                <Container className=\"favouritesContainer\">\n                    {favourites.length !== 0 ? (\n                        favourites.map((favourite, index) => (\n                            <FavouriteList\n                                key={index}\n                                favourite={favourite}\n                                removeFavourite={this.removeFavourite}\n                            />\n                        ))\n                    ) : (\n                        <div className=\"noFavourites\">\n                            {/* Show no favourites message if no favourites are found */}\n                            {this.showNoFavourites()}\n                        </div>\n                    )}\n                </Container>\n            </Container>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}