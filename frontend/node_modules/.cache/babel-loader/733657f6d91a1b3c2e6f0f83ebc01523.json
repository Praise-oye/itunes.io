{"ast":null,"code":"var _jsxFileName = \"/Users/square1-praise/Downloads/Itunes-Web-Store-Search-App-main/frontend/src/components/Search.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Container, Form, Button, FormControl, DropdownButton, Dropdown } from 'react-bootstrap'; // Components imported\n\nimport DisplayItems from './DisplayItems';\nimport HelpModal from './HelpModal';\nimport FavouriteList from './FavouriteList'; // Component: Search\n\n/* Description: Search component for the frontend this contains the search form,\n request to the backend and renders the display of the items, favourite list, the state management and logic*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Search extends React.Component {\n  constructor() {\n    super();\n\n    this.handleCatagorySelect = (eventKey, value) => {\n      this.setState({\n        catagory: eventKey\n      });\n    };\n\n    this.handleSearchChange = event => {\n      //recieve user input\n      this.setState({\n        searchItem: event.target.value\n      }); // split and join to remove spaces and replace spaces for '+'s to searchItem variable\n\n      const searchItemEdited = this.state.searchItem.split(' ').join('+');\n      this.setState({\n        searchItemEdited: searchItemEdited\n      });\n    };\n\n    this.showButton = () => {\n      if (this.state.catagory !== '') {\n        return /*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn btn-primary\",\n          onClick: this.handleSubmit,\n          children: [\"Search \", this.state.catagory.toUpperCase(), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this);\n      }\n    };\n\n    this.handleSubmit = event => {\n      // axios call to get data from server.js\n      let query = this.state.searchItemEdited;\n      let type = this.state.catagory;\n      axios.get(`/search/${query}/${type}`).then(res => {\n        this.setState({\n          data: res.data.results\n        });\n\n        if (res.data.results.length === 0) {\n          alert('Unfortunately no results were found!');\n        }\n      });\n    };\n\n    this.showNoResults = () => {\n      if (this.state.data.length === 0) {\n        return /*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"noResults\",\n          children: \" Itunes Web Store Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this);\n      }\n    };\n\n    this.showNoFavourites = () => {\n      if (this.state.favourites.length === 0 && this.state.searchItemEdited !== '' && this.state.catagory !== '' && this.state.data.length !== 0) {\n        return /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"lead text-center\",\n          children: \" Click the star on an item to view your favourites here! \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this);\n      }\n    };\n\n    this.handleFavourites = (id, kind, artistName, trackName, artwork) => {\n      //if item is already in favourites it will not be added again\n      // else pushes item info to favourites state\n      if (this.state.favourites.find(item => item.id === id)) {\n        alert('This item has already been added to your favourites list!');\n      } else {\n        this.setState({\n          favourites: [...this.state.favourites, {\n            id: id,\n            kind: kind,\n            artistName: artistName,\n            trackName: trackName,\n            artwork: artwork\n          }]\n        });\n        alert('Added to your favourites list, scroll down to view!');\n      }\n    };\n\n    this.removeFavourite = id => {\n      // filter out item from favourites state\n      const newFavourites = this.state.favourites.filter(item => item.id !== id);\n      this.setState({\n        favourites: newFavourites\n      });\n      alert('Removed from favourites list');\n    };\n\n    this.state = {\n      searchItem: '',\n      searchItemEdited: '',\n      catagory: '',\n      data: [],\n      favourites: []\n    };\n  } //when user selects catagory from dropdown menu it updates the state of catagory\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(Form, {\n          onChange: this.handleSearchChange,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            type: \"text\",\n            placeholder: \"Search term...\",\n            className: \"mr-sm-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(DropdownButton, {\n          title: \"Catagories\",\n          id: \"dropdown-basic-button\",\n          onSelect: this.handleCatagorySelect,\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"movie\",\n            value: \"Movie\",\n            children: \" Movie \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"podcast\",\n            value: \"Podcast\",\n            children: \" Podcast \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"music\",\n            value: \"Music\",\n            children: \" Music \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"audiobook\",\n            value: \"Audiobook\",\n            children: \" Audiobook \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"shortFilm\",\n            value: \"Short Film\",\n            children: \" Short Film \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"tvShow\",\n            value: \"TV Show\",\n            children: \" TV Show \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"software\",\n            value: \"Software\",\n            children: \" Software \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"ebook\",\n            value: \"Ebook\",\n            children: \" Ebook \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"all\",\n            value: \"All\",\n            children: \" All \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"searchButton\",\n          children: this.showButton()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(HelpModal, {\n          className: \"modalButton\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        className: \"cardsContainer\",\n        children: this.state.data.length !== 0 ? this.state.data.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(DisplayItems, {\n            item: item,\n            handleFavourites: this.handleFavourites\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 29\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"noResults\",\n          children: this.showNoResults()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        className: \"favouritesContainer\",\n        children: this.state.favourites.length !== 0 ? this.state.favourites.map((favourite, index) => {\n          return /*#__PURE__*/_jsxDEV(FavouriteList, {\n            favourite: favourite,\n            removeFavourite: this.removeFavourite\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 29\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"noFavourites\",\n          children: this.showNoFavourites()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/square1-praise/Downloads/Itunes-Web-Store-Search-App-main/frontend/src/components/Search.js"],"names":["React","axios","Container","Form","Button","FormControl","DropdownButton","Dropdown","DisplayItems","HelpModal","FavouriteList","Search","Component","constructor","handleCatagorySelect","eventKey","value","setState","catagory","handleSearchChange","event","searchItem","target","searchItemEdited","state","split","join","showButton","handleSubmit","toUpperCase","query","type","get","then","res","data","results","length","alert","showNoResults","showNoFavourites","favourites","handleFavourites","id","kind","artistName","trackName","artwork","find","item","removeFavourite","newFavourites","filter","render","map","index","favourite"],"mappings":"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","sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport {Container, Form, Button, FormControl, DropdownButton, Dropdown} from 'react-bootstrap'\n\n// Components imported\nimport DisplayItems from './DisplayItems'\nimport HelpModal from './HelpModal'\nimport FavouriteList from './FavouriteList'\n\n// Component: Search\n/* Description: Search component for the frontend this contains the search form,\n request to the backend and renders the display of the items, favourite list, the state management and logic*/\n\nclass Search extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      searchItem: '',\n      searchItemEdited: '',\n      catagory: '',\n      data: [],\n      favourites: [],\n    }\n  }\n\n    //when user selects catagory from dropdown menu it updates the state of catagory\n    handleCatagorySelect = (eventKey, value) => {\n        this.setState({catagory: eventKey})\n    }\n\n    //when user types in search bar it updates the state of searchItem and searchItemEdited\n    handleSearchChange = (event) => {\n        //recieve user input\n        this.setState({searchItem: event.target.value})\n        // split and join to remove spaces and replace spaces for '+'s to searchItem variable\n        const searchItemEdited = this.state.searchItem.split(' ').join('+')\n        this.setState({searchItemEdited: searchItemEdited})\n    }\n\n     //show button once user selects a catagory\n     showButton = () => {\n        if (this.state.catagory !== '') {\n            return (\n                <Button className=\"btn btn-primary\" onClick={this.handleSubmit}>Search {this.state.catagory.toUpperCase()} </Button>\n            )\n        }\n    }\n\n    /*  When user clicks search/submit button it sends user input to server.js\n        and recieves the response from the server and updates the state of data \n        if no results were found by the api an alert is sent to state that no results have been found\n    */\n    handleSubmit = (event) => {\n        // axios call to get data from server.js\n        let query = this.state.searchItemEdited\n        let type = this.state.catagory\n        axios.get(`/search/${query}/${type}`)\n        .then(res => {\n            this.setState({data: res.data.results})\n            if (res.data.results.length === 0) {\n                alert('Unfortunately no results were found!')\n            }\n        }\n        )\n    }\n\n    // Show no results message (Itunes Web Store Search Heading) if no results are found\n    showNoResults = () => {\n        if (this.state.data.length === 0) {\n            return (\n                <h1 id='noResults' > Itunes Web Store Search</h1>\n            )\n        }\n    }\n\n    // Show no favourites message if no favourites are found\n    showNoFavourites = () => {\n        if (this.state.favourites.length === 0 && this.state.searchItemEdited !== '' && this.state.catagory !== '' && this.state.data.length !== 0) {\n            return (\n                <h3 className=\"lead text-center\"> Click the star on an item to view your favourites here! </h3>\n            )\n        }\n    }\n\n    // Gets favourited item info from DisplayItems and sets it to favourites state\n    handleFavourites = (id, kind, artistName, trackName, artwork) => {\n        //if item is already in favourites it will not be added again\n        // else pushes item info to favourites state\n        if (this.state.favourites.find(item => item.id === id)) {\n            alert('This item has already been added to your favourites list!')\n        } else {\n        this.setState({favourites: [...this.state.favourites, {id: id, kind: kind, artistName: artistName, trackName: trackName, artwork: artwork}]})\n        alert('Added to your favourites list, scroll down to view!')\n        }\n    }\n\n    // Removes item from favourites\n    removeFavourite = (id) => {\n        // filter out item from favourites state\n        const newFavourites = this.state.favourites.filter(item => item.id !== id)\n        this.setState({favourites: newFavourites})\n        alert('Removed from favourites list')\n    }\n    \n    render() {\n        return (\n            <Container>\n\n                {/* Navbar/Header */}\n                    <div className=\"header\">\n                        {/* Seach form */}\n                        <Form onChange={this.handleSearchChange}>\n                            <FormControl type=\"text\" placeholder='Search term...' className=\"mr-sm-2\" />\n                        </Form>\n\n                        {/* Dropdown catagory menu */}\n                        <DropdownButton title='Catagories' id=\"dropdown-basic-button\" onSelect={this.handleCatagorySelect}>\n                                {/* when user selects an drop down item updates catagory state */}\n                                <Dropdown.Item eventKey='movie' value='Movie'> Movie </Dropdown.Item>\n                                <Dropdown.Item eventKey='podcast' value='Podcast'> Podcast </Dropdown.Item>\n                                <Dropdown.Item eventKey='music' value='Music'> Music </Dropdown.Item>\n                                <Dropdown.Item eventKey='audiobook' value='Audiobook'> Audiobook </Dropdown.Item>\n                                <Dropdown.Item eventKey='shortFilm' value='Short Film'> Short Film </Dropdown.Item>\n                                <Dropdown.Item eventKey='tvShow' value='TV Show'> TV Show </Dropdown.Item>\n                                <Dropdown.Item eventKey='software' value='Software'> Software </Dropdown.Item>\n                                <Dropdown.Item eventKey='ebook' value='Ebook'> Ebook </Dropdown.Item>\n                                <Dropdown.Item eventKey='all' value='All'> All </Dropdown.Item>\n                        </DropdownButton>\n\n                        {/* shows button once user selects a catagory */}\n                        <div className=\"searchButton\">\n                            {this.showButton()} \n                        </div>\n                    \n                        {/* Help modal with instructions */}\n                        <HelpModal className=\"modalButton\"/>\n                    </div>\n\n                {/* Display items */}\n                <Container className=\"cardsContainer\">\n                {this.state.data.length !== 0 ? (\n                    this.state.data.map((item, index) => {\n                        return (\n                            <DisplayItems\n                                key={index}\n                                item={item}\n                                handleFavourites={this.handleFavourites}\n                            />\n                        )\n                    })\n                ) : (\n                    <div className=\"noResults\">\n                        {/* Show no results message if no results are found and upon intial load */}\n                        {this.showNoResults()}\n                    </div>\n                )}\n                </Container>\n\n                {/* Favourites list */}\n                <Container className=\"favouritesContainer\">\n                {this.state.favourites.length !== 0 ? (\n                    this.state.favourites.map((favourite, index) => {\n                        return (\n                            <FavouriteList\n                                key={index}\n                                favourite={favourite}\n                                removeFavourite={this.removeFavourite}\n                            />\n                        )\n                    }\n                    )\n                ) : (\n                    <div className=\"noFavourites\">\n                        {/* Show no favourites message if no results are found */}\n                        {this.showNoFavourites()}\n                    </div>\n                )}\n                </Container>\n            </Container>\n        )\n    }\n}\n\nexport default Search;\n\n\n"]},"metadata":{},"sourceType":"module"}