{"ast":null,"code":"var _jsxFileName = \"/Users/square1-praise/Downloads/Itunes-Web-Store-Search-App-main/frontend/src/components/Search.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Container, Form, Button, FormControl, DropdownButton, Dropdown } from 'react-bootstrap'; // Components imported\n\nimport DisplayItems from './DisplayItems';\nimport HelpModal from './HelpModal';\nimport FavouriteList from './FavouriteList'; // Component: Search\n\n/* Description: Search component for the frontend. This component contains the search form,\n request to the backend, and renders the display of the items, favourite list, state management, and logic */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Search extends React.Component {\n  constructor() {\n    super();\n\n    this.handleCategorySelect = eventKey => {\n      this.setState({\n        category: eventKey\n      });\n    };\n\n    this.handleSearchChange = event => {\n      //receive user input\n      this.setState({\n        searchItem: event.target.value\n      }); // split and join to remove spaces and replace spaces with '+'s in the searchItem variable\n\n      const searchItemEdited = this.state.searchItem.split(' ').join('+');\n      this.setState({\n        searchItemEdited: searchItemEdited\n      });\n    };\n\n    this.showButton = () => {\n      if (this.state.category !== '') {\n        return /*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn btn-primary\",\n          onClick: this.handleSubmit,\n          children: [\"Search \", this.state.category.toUpperCase()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this);\n      }\n    };\n\n    this.handleSubmit = () => {\n      // axios call to get data from server.js\n      const query = this.state.searchItemEdited;\n      const type = this.state.category;\n      axios.get(`/search/${query}/${type}`).then(res => {\n        this.setState({\n          data: res.data.results\n        });\n\n        if (res.data.results.length === 0) {\n          alert('Unfortunately no results were found!');\n        }\n      });\n    };\n\n    this.showNoResults = () => {\n      if (this.state.data.length === 0) {\n        return /*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"noResults\",\n          children: \"Itunes Web Store Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 14\n        }, this);\n      }\n    };\n\n    this.showNoFavourites = () => {\n      if (this.state.favourites.length === 0 && this.state.searchItemEdited !== '' && this.state.category !== '' && this.state.data.length !== 0) {\n        return /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"lead text-center\",\n          children: \"Click the star on an item to view your favourites here!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this);\n      }\n    };\n\n    this.handleFavourites = (id, kind, artistName, trackName, artwork) => {\n      //if item is already in favourites, it will not be added again\n      // else pushes item info to favourites state\n      if (this.state.favourites.find(item => item.id === id)) {\n        alert('This item has already been added to your favourites list!');\n      } else {\n        this.setState({\n          favourites: [...this.state.favourites, {\n            id: id,\n            kind: kind,\n            artistName: artistName,\n            trackName: trackName,\n            artwork: artwork\n          }]\n        });\n        alert('Added to your favourites list, scroll down to view!');\n      }\n    };\n\n    this.removeFavourite = id => {\n      // filter out item from favourites state\n      const newFavourites = this.state.favourites.filter(item => item.id !== id);\n      this.setState({\n        favourites: newFavourites\n      });\n      alert('Removed from favourites list');\n    };\n\n    this.state = {\n      searchItem: '',\n      searchItemEdited: '',\n      category: '',\n      data: [],\n      favourites: []\n    };\n  } //when user selects category from dropdown menu, it updates the state of the category\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(Form, {\n          onChange: this.handleSearchChange,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            type: \"text\",\n            placeholder: \"Search term...\",\n            className: \"mr-sm-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DropdownButton, {\n          title: \"Categories\",\n          id: \"dropdown-basic-button\",\n          onSelect: this.handleCategorySelect,\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"movie\",\n            value: \"Movie\",\n            children: \"Movie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"podcast\",\n            value: \"Podcast\",\n            children: \"Podcast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"music\",\n            value: \"Music\",\n            children: \"Music\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"audiobook\",\n            value: \"Audiobook\",\n            children: \"Audiobook\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"shortFilm\",\n            value: \"Short Film\",\n            children: \"Short Film\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"tvShow\",\n            value: \"TV Show\",\n            children: \"TV Show\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"software\",\n            value: \"Software\",\n            children: \"Software\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"ebook\",\n            value: \"Ebook\",\n            children: \"Ebook\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"all\",\n            value: \"All\",\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"searchButton\",\n          children: this.showButton()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HelpModal, {\n          className: \"modalButton\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        className: \"cardsContainer\",\n        children: this.state.data.length !== 0 ? this.state.data.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(DisplayItems, {\n            item: item,\n            handleFavourites: this.handleFavourites\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 17\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"noResults\",\n          children: this.showNoResults()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        className: \"favouritesContainer\",\n        children: this.state.favourites.length !== 0 ? this.state.favourites.map((favourite, index) => {\n          return /*#__PURE__*/_jsxDEV(FavouriteList, {\n            favourite: favourite,\n            removeFavourite: this.removeFavourite\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 17\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"noFavourites\",\n          children: this.showNoFavourites()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/square1-praise/Downloads/Itunes-Web-Store-Search-App-main/frontend/src/components/Search.js"],"names":["React","axios","Container","Form","Button","FormControl","DropdownButton","Dropdown","DisplayItems","HelpModal","FavouriteList","Search","Component","constructor","handleCategorySelect","eventKey","setState","category","handleSearchChange","event","searchItem","target","value","searchItemEdited","state","split","join","showButton","handleSubmit","toUpperCase","query","type","get","then","res","data","results","length","alert","showNoResults","showNoFavourites","favourites","handleFavourites","id","kind","artistName","trackName","artwork","find","item","removeFavourite","newFavourites","filter","render","map","index","favourite"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport {\n  Container,\n  Form,\n  Button,\n  FormControl,\n  DropdownButton,\n  Dropdown,\n} from 'react-bootstrap';\n\n// Components imported\nimport DisplayItems from './DisplayItems';\nimport HelpModal from './HelpModal';\nimport FavouriteList from './FavouriteList';\n\n// Component: Search\n/* Description: Search component for the frontend. This component contains the search form,\n request to the backend, and renders the display of the items, favourite list, state management, and logic */\n\nclass Search extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      searchItem: '',\n      searchItemEdited: '',\n      category: '',\n      data: [],\n      favourites: [],\n    };\n  }\n\n  //when user selects category from dropdown menu, it updates the state of the category\n  handleCategorySelect = (eventKey) => {\n    this.setState({ category: eventKey });\n  };\n\n  //when user types in the search bar, it updates the state of searchItem and searchItemEdited\n  handleSearchChange = (event) => {\n    //receive user input\n    this.setState({ searchItem: event.target.value });\n    // split and join to remove spaces and replace spaces with '+'s in the searchItem variable\n    const searchItemEdited = this.state.searchItem.split(' ').join('+');\n    this.setState({ searchItemEdited: searchItemEdited });\n  };\n\n  //show button once user selects a category\n  showButton = () => {\n    if (this.state.category !== '') {\n      return (\n        <Button className=\"btn btn-primary\" onClick={this.handleSubmit}>\n          Search {this.state.category.toUpperCase()}\n        </Button>\n      );\n    }\n  };\n\n  /*  When the user clicks the search/submit button, it sends user input to server.js\n      and receives the response from the server and updates the state of data \n      if no results were found by the API, an alert is sent to the state that no results have been found\n  */\n  handleSubmit = () => {\n    // axios call to get data from server.js\n    const query = this.state.searchItemEdited;\n    const type = this.state.category;\n    axios.get(`/search/${query}/${type}`).then((res) => {\n      this.setState({ data: res.data.results });\n      if (res.data.results.length === 0) {\n        alert('Unfortunately no results were found!');\n      }\n    });\n  };\n\n  // Show no results message (Itunes Web Store Search Heading) if no results are found\n  showNoResults = () => {\n    if (this.state.data.length === 0) {\n      return <h1 id=\"noResults\">Itunes Web Store Search</h1>;\n    }\n  };\n\n  // Show no favourites message if no favourites are found\n  showNoFavourites = () => {\n    if (\n      this.state.favourites.length === 0 &&\n      this.state.searchItemEdited !== '' &&\n      this.state.category !== '' &&\n      this.state.data.length !== 0\n    ) {\n      return (\n        <h3 className=\"lead text-center\">\n          Click the star on an item to view your favourites here!\n        </h3>\n      );\n    }\n  };\n\n  // Gets favourited item info from DisplayItems and sets it to favourites state\n  handleFavourites = (id, kind, artistName, trackName, artwork) => {\n    //if item is already in favourites, it will not be added again\n    // else pushes item info to favourites state\n    if (this.state.favourites.find((item) => item.id === id)) {\n      alert('This item has already been added to your favourites list!');\n     } else {\n      this.setState({\n        favourites: [\n          ...this.state.favourites,\n          { id: id, kind: kind, artistName: artistName, trackName: trackName, artwork: artwork },\n        ],\n      });\n      alert('Added to your favourites list, scroll down to view!');\n    }\n  };\n\n  // Removes item from favourites\n  removeFavourite = (id) => {\n    // filter out item from favourites state\n    const newFavourites = this.state.favourites.filter((item) => item.id !== id);\n    this.setState({ favourites: newFavourites });\n    alert('Removed from favourites list');\n  };\n\n  render() {\n    return (\n      <Container>\n        {/* Navbar/Header */}\n        <div className=\"header\">\n          {/* Search form */}\n          <Form onChange={this.handleSearchChange}>\n            <FormControl type=\"text\" placeholder=\"Search term...\" className=\"mr-sm-2\" />\n          </Form>\n\n          {/* Dropdown category menu */}\n          <DropdownButton title=\"Categories\" id=\"dropdown-basic-button\" onSelect={this.handleCategorySelect}>\n            {/* when the user selects a dropdown item, it updates the category state */}\n            <Dropdown.Item eventKey=\"movie\" value=\"Movie\">\n              Movie\n            </Dropdown.Item>\n            <Dropdown.Item eventKey=\"podcast\" value=\"Podcast\">\n              Podcast\n            </Dropdown.Item>\n            <Dropdown.Item eventKey=\"music\" value=\"Music\">\n              Music\n            </Dropdown.Item>\n            <Dropdown.Item eventKey=\"audiobook\" value=\"Audiobook\">\n              Audiobook\n            </Dropdown.Item>\n            <Dropdown.Item eventKey=\"shortFilm\" value=\"Short Film\">\n              Short Film\n            </Dropdown.Item>\n            <Dropdown.Item eventKey=\"tvShow\" value=\"TV Show\">\n              TV Show\n            </Dropdown.Item>\n            <Dropdown.Item eventKey=\"software\" value=\"Software\">\n              Software\n            </Dropdown.Item>\n            <Dropdown.Item eventKey=\"ebook\" value=\"Ebook\">\n              Ebook\n            </Dropdown.Item>\n            <Dropdown.Item eventKey=\"all\" value=\"All\">\n              All\n            </Dropdown.Item>\n          </DropdownButton>\n\n          {/* shows button once user selects a category */}\n          <div className=\"searchButton\">{this.showButton()}</div>\n\n          {/* Help modal with instructions */}\n          <HelpModal className=\"modalButton\" />\n        </div>\n\n        {/* Display items */}\n        <Container className=\"cardsContainer\">\n          {this.state.data.length !== 0 ? (\n            this.state.data.map((item, index) => {\n              return (\n                <DisplayItems\n                  key={index}\n                  item={item}\n                  handleFavourites={this.handleFavourites}\n                />\n              );\n            })\n          ) : (\n            <div className=\"noResults\">\n              {/* Show no results message if no results are found and upon initial load */}\n              {this.showNoResults()}\n            </div>\n          )}\n        </Container>\n\n        {/* Favourites list */}\n        <Container className=\"favouritesContainer\">\n          {this.state.favourites.length !== 0 ? (\n            this.state.favourites.map((favourite, index) => {\n              return (\n                <FavouriteList\n                  key={index}\n                  favourite={favourite}\n                  removeFavourite={this.removeFavourite}\n                />\n              );\n            })\n          ) : (\n            <div className=\"noFavourites\">\n              {/* Show no favourites message if no results are found */}\n              {this.showNoFavourites()}\n            </div>\n          )}\n        </Container>\n      </Container>\n    );\n  }\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}